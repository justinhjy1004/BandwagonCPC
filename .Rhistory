library(tidyverse)
library(stargazer)
df <- read_csv("data.csv")
View(df)
# Vanilla Regression
lmod <- lm(switch ~ diff_growth + log1p(num_citation) + as.factor(year), df)
summary(lmod)
View(df)
# Vanilla Regression
lmod <- lm(switch ~ diff_growth + log1p(num_citation) + as.factor(year) + prev_cpc_section, df)
summary(lmod)
# Vanilla Regression
lmod <- lm(switch ~ diff_growth + log1p(num_citation) + as.factor(year), df)
summary(lmod)
# Regression Estimates on the bottom 75%
lmod <- lm(switch ~ diff_growth + log1p(num_citation) + as.factor(year), df[!df$top_25_patent,])
# Classify the assignee has having the top 25% in number of patents
# or bottom 75%
df |>
select(assignee_id, num_patents) |>
distinct() -> a
top_25_patent <- quantile(a$num_patents)[[4]]
df |>
mutate(top_25_patent = ifelse(num_patents > top_25_patent, T, F)) -> df
# Regression Estimates on the bottom 75%
lmod <- lm(switch ~ diff_growth + log1p(num_citation) + as.factor(year), df[!df$top_25_patent,])
summary(lmod)
# Regression Estimates on the top 25%
lmod <- lm(switch ~ diff_growth + log1p(num_citation) + as.factor(year), df[df$top_25_patent,])
summary(lmod)
library(tidyverse)
library(tidyverse)
library(stargazer)
df <- read_csv("data.csv")
# Vanilla Regression
lmod <- lm(switch ~ diff_growth + log1p(num_citation) + as.factor(year), df)
summary(lmod)
logit <- glm(switch ~ diff_growth + log1p(num_citation) + as.factor(year),
family = binomial(link = "logit"),
data = df)
summary(logit)
probit <- glm(switch ~ diff_growth + log1p(num_citation) + as.factor(year),
family = binomial(link = "probit"),
data = df)
summary(logit)
View(df)
summary(probit)
